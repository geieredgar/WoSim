name: Rust

on:
  push:
    branches: ['main']
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node: [14]

    steps:
      - uses: actions/checkout@v2

      - name: Install Vulkan SDK and dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          wget -qO - http://packages.lunarg.com/lunarg-signing-key-pub.asc | sudo apt-key add -
          sudo wget -qO /etc/apt/sources.list.d/lunarg-vulkan-focal.list http://packages.lunarg.com/vulkan/lunarg-vulkan-focal.list
          sudo apt update
          sudo apt install vulkan-sdk libxcb-shape0-dev libxcb-xfixes0-dev libgtk-3-dev libgtksourceview-3.0-dev webkit2gtk-4.0 libappindicator3-dev

      - name: Install Vulkan SDK (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          choco install vulkan-sdk --version=1.2.162.1
          echo "VULKAN_SDK=C:\VulkanSDK\1.2.162.1" >> $GITHUB_ENV
        shell: bash

      - name: Install MoltenVK (macOS)
        if: matrix.os == 'macos-latest'
        run: brew install molten-vk

      - name: Rust toolchain
        run: rustup show

      - name: Rust cache
        uses: Swatinem/rust-cache@v1

      - name: Setup node env
        uses: actions/setup-node@v2.1.5
        with:
          node-version: ${{ matrix.node }}
          check-latest: true

      - name: Cache .yarn
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: .yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: |
          npm uninstall -g yarn
          npm install -g corepack
          yarn
          cargo fetch

      - name: Format
        run: cargo fmt --all --verbose

      - name: Lint
        run: |
          cargo clippy --workspace --verbose -- -D warnings
          yarn workspace hub lint
          yarn workspace website lint

      - name: Build
        run: |
          yarn workspace website generate
          yarn workspace hub tauri build
          cargo build --workspace --verbose

      - name: Test
        run: |
          cargo test --workspace --verbose
          yarn workspace hub test
          yarn workspace website test
